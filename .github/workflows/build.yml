name: Build and Release

on:
  release:
    types: [published]
  push:
    branches: 
     - master
  schedule:
  - cron: 0 4 * * *
  watch:
    types: [started]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      -
        name: Get version
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/cloudflare/cloudflared/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/lmq8267/cloudflared/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      - 
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.7
      - 
        name: Set up upx
        uses: actions/setup-upx@v4
        with:
          upx-version: 3.95
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Build
        run: |
          git clone https://github.com/cloudflare/cloudflared -b ${{ needs.check.outputs.ver }} /opt/src
          cd /opt/src
          curl -L -k -S -o /opt/src/strip  --connect-timeout 20 --retry 6 https://github.com/lmq8267/cloudflared/raw/main/strip
          GOOS=linux GOARCH=mipsle GOMIPS=softfloat make cloudflared
          chmod 0777 /opt/src/strip
          /opt/src/strip /opt/src/cloudflared
          upx --lzma --best cloudflared
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.c8 }}
          file: /opt/src/cloudflared
          release_name: ${{ needs.check.outputs.ver }}
          tag: ${{ needs.check.outputs.ver }}
          overwrite: true
          file_glob: true
     
